"""empty message

Revision ID: 90f1901ad3ed
Revises: 
Create Date: 2024-03-31 17:32:39.997260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '90f1901ad3ed'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aircrafts',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('orig_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('companies',
    sa.Column('iata', sa.String(length=2), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('url_buy', sa.String(), nullable=True),
    sa.Column('url_register', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('iata')
    )
    op.create_table('countries',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(length=128), nullable=False),
    sa.Column('role', sa.Enum('GUEST', 'USER', 'ADMIN', 'ROOT', name='userrole'), nullable=False),
    sa.Column('state', sa.Enum('BLOCKED', 'INACTIVE', 'ACTIVE', name='userstate'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('cities',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('name_ru', sa.String(), nullable=False),
    sa.Column('timezone', sa.String(), nullable=False),
    sa.Column('country_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['country_name'], ['countries.name'], ondelete='set null'),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('airports',
    sa.Column('iata', sa.String(length=3), nullable=False),
    sa.Column('icao', sa.String(length=4), nullable=True),
    sa.Column('code_ru', sa.String(length=3), nullable=True),
    sa.Column('orig_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('name_ru', sa.String(), nullable=False),
    sa.Column('lat', sa.DECIMAL(precision=9, scale=6), nullable=True),
    sa.Column('long', sa.DECIMAL(precision=9, scale=6), nullable=True),
    sa.Column('city_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['city_name'], ['cities.name'], ondelete='set null'),
    sa.PrimaryKeyConstraint('iata')
    )
    op.create_table('flights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('orig_id', sa.Integer(), nullable=False),
    sa.Column('mar1_iata', sa.String(length=3), nullable=True),
    sa.Column('mar2_iata', sa.String(length=3), nullable=True),
    sa.Column('mar3_iata', sa.String(length=3), nullable=True),
    sa.Column('mar4_iata', sa.String(length=3), nullable=True),
    sa.Column('mar5_iata', sa.String(length=3), nullable=True),
    sa.Column('aircraft_name', sa.String(), nullable=True),
    sa.Column('company_iata', sa.String(length=2), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('direction', sa.Enum('arrival', 'departure', name='direction'), nullable=False),
    sa.Column('date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('main_orig_id', sa.Integer(), nullable=True),
    sa.Column('way_time', sa.Integer(), nullable=True),
    sa.Column('chin_start', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('chin_end', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('chin_start_et', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('chin_end_et', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('chin_id', sa.String(), nullable=True),
    sa.Column('boarding_start', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('boarding_end', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('gate_id', sa.String(), nullable=True),
    sa.Column('gate_id_prev', sa.String(), nullable=True),
    sa.Column('term_local', sa.String(), nullable=True),
    sa.Column('term_local_prev', sa.String(), nullable=True),
    sa.Column('bbel_id', sa.String(), nullable=True),
    sa.Column('bbel_id_prev', sa.String(), nullable=True),
    sa.Column('bbel_start', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('bbel_start_et', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('bbel_end', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('sked_local', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('sked_other', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('at_local', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('at_local_et', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('at_other', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('at_other_et', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('takeoff_et', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('otpr', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('prb', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['aircraft_name'], ['aircrafts.name'], ondelete='set null'),
    sa.ForeignKeyConstraint(['company_iata'], ['companies.iata'], ondelete='set null'),
    sa.ForeignKeyConstraint(['mar1_iata'], ['airports.iata'], ondelete='set null'),
    sa.ForeignKeyConstraint(['mar2_iata'], ['airports.iata'], ondelete='set null'),
    sa.ForeignKeyConstraint(['mar3_iata'], ['airports.iata'], ondelete='set null'),
    sa.ForeignKeyConstraint(['mar4_iata'], ['airports.iata'], ondelete='set null'),
    sa.ForeignKeyConstraint(['mar5_iata'], ['airports.iata'], ondelete='set null'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('orig_id')
    )
    op.create_table('flights_changelog',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.Column('field', sa.String(), nullable=False),
    sa.Column('old_value', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['flight_id'], ['flights.id'], ondelete='set null'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flights_changelog_flight_id'), 'flights_changelog', ['flight_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_flights_changelog_flight_id'), table_name='flights_changelog')
    op.drop_table('flights_changelog')
    op.drop_table('flights')
    op.drop_table('airports')
    op.drop_table('cities')
    op.drop_table('users')
    op.drop_table('countries')
    op.drop_table('companies')
    op.drop_table('aircrafts')
    # ### end Alembic commands ###
